/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MenuIndexRouteImport } from './routes/_menu/index'
import { Route as InvitesInviteIdRouteImport } from './routes/invites/$inviteId'
import { Route as MenuProfileRouteImport } from './routes/_menu/profile'
import { Route as LinksInviteInviteIdRouteImport } from './routes/links/invite/$inviteId'
import { Route as MenuAClubsIndexRouteImport } from './routes/_menu/a/clubs/index'
import { Route as MenuAAdminsIndexRouteImport } from './routes/_menu/a/admins/index'
import { Route as MenuAClubsClubIdClubRouteImport } from './routes/_menu/a/clubs/$clubId/_club'
import { Route as MenuAClubsClubIdClubMembersRouteImport } from './routes/_menu/a/clubs/$clubId/_club/members'
import { Route as MenuAClubsClubIdClubDomainsRouteImport } from './routes/_menu/a/clubs/$clubId/_club/domains'
import { Route as MenuAClubsClubIdClubDashboardRouteImport } from './routes/_menu/a/clubs/$clubId/_club/dashboard'
import { Route as MenuAClubsClubIdClubAdminsRouteImport } from './routes/_menu/a/clubs/$clubId/_club/admins'

const MenuLazyRouteImport = createFileRoute('/_menu')()
const MenuAClubsClubIdRouteImport = createFileRoute('/_menu/a/clubs/$clubId')()

const MenuLazyRoute = MenuLazyRouteImport.update({
  id: '/_menu',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/_menu.lazy').then((d) => d.Route))
const MenuIndexRoute = MenuIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MenuLazyRoute,
} as any)
const InvitesInviteIdRoute = InvitesInviteIdRouteImport.update({
  id: '/invites/$inviteId',
  path: '/invites/$inviteId',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuProfileRoute = MenuProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => MenuLazyRoute,
} as any)
const LinksInviteInviteIdRoute = LinksInviteInviteIdRouteImport.update({
  id: '/links/invite/$inviteId',
  path: '/links/invite/$inviteId',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuAClubsClubIdRoute = MenuAClubsClubIdRouteImport.update({
  id: '/a/clubs/$clubId',
  path: '/a/clubs/$clubId',
  getParentRoute: () => MenuLazyRoute,
} as any)
const MenuAClubsIndexRoute = MenuAClubsIndexRouteImport.update({
  id: '/a/clubs/',
  path: '/a/clubs/',
  getParentRoute: () => MenuLazyRoute,
} as any)
const MenuAAdminsIndexRoute = MenuAAdminsIndexRouteImport.update({
  id: '/a/admins/',
  path: '/a/admins/',
  getParentRoute: () => MenuLazyRoute,
} as any)
const MenuAClubsClubIdClubRoute = MenuAClubsClubIdClubRouteImport.update({
  id: '/_club',
  getParentRoute: () => MenuAClubsClubIdRoute,
} as any)
const MenuAClubsClubIdClubMembersRoute =
  MenuAClubsClubIdClubMembersRouteImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => MenuAClubsClubIdClubRoute,
  } as any)
const MenuAClubsClubIdClubDomainsRoute =
  MenuAClubsClubIdClubDomainsRouteImport.update({
    id: '/domains',
    path: '/domains',
    getParentRoute: () => MenuAClubsClubIdClubRoute,
  } as any)
const MenuAClubsClubIdClubDashboardRoute =
  MenuAClubsClubIdClubDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => MenuAClubsClubIdClubRoute,
  } as any)
const MenuAClubsClubIdClubAdminsRoute =
  MenuAClubsClubIdClubAdminsRouteImport.update({
    id: '/admins',
    path: '/admins',
    getParentRoute: () => MenuAClubsClubIdClubRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/profile': typeof MenuProfileRoute
  '/invites/$inviteId': typeof InvitesInviteIdRoute
  '/': typeof MenuIndexRoute
  '/links/invite/$inviteId': typeof LinksInviteInviteIdRoute
  '/a/admins': typeof MenuAAdminsIndexRoute
  '/a/clubs': typeof MenuAClubsIndexRoute
  '/a/clubs/$clubId': typeof MenuAClubsClubIdClubRouteWithChildren
  '/a/clubs/$clubId/admins': typeof MenuAClubsClubIdClubAdminsRoute
  '/a/clubs/$clubId/dashboard': typeof MenuAClubsClubIdClubDashboardRoute
  '/a/clubs/$clubId/domains': typeof MenuAClubsClubIdClubDomainsRoute
  '/a/clubs/$clubId/members': typeof MenuAClubsClubIdClubMembersRoute
}
export interface FileRoutesByTo {
  '/profile': typeof MenuProfileRoute
  '/invites/$inviteId': typeof InvitesInviteIdRoute
  '/': typeof MenuIndexRoute
  '/links/invite/$inviteId': typeof LinksInviteInviteIdRoute
  '/a/admins': typeof MenuAAdminsIndexRoute
  '/a/clubs': typeof MenuAClubsIndexRoute
  '/a/clubs/$clubId': typeof MenuAClubsClubIdClubRouteWithChildren
  '/a/clubs/$clubId/admins': typeof MenuAClubsClubIdClubAdminsRoute
  '/a/clubs/$clubId/dashboard': typeof MenuAClubsClubIdClubDashboardRoute
  '/a/clubs/$clubId/domains': typeof MenuAClubsClubIdClubDomainsRoute
  '/a/clubs/$clubId/members': typeof MenuAClubsClubIdClubMembersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_menu': typeof MenuLazyRouteWithChildren
  '/_menu/profile': typeof MenuProfileRoute
  '/invites/$inviteId': typeof InvitesInviteIdRoute
  '/_menu/': typeof MenuIndexRoute
  '/links/invite/$inviteId': typeof LinksInviteInviteIdRoute
  '/_menu/a/admins/': typeof MenuAAdminsIndexRoute
  '/_menu/a/clubs/': typeof MenuAClubsIndexRoute
  '/_menu/a/clubs/$clubId': typeof MenuAClubsClubIdRouteWithChildren
  '/_menu/a/clubs/$clubId/_club': typeof MenuAClubsClubIdClubRouteWithChildren
  '/_menu/a/clubs/$clubId/_club/admins': typeof MenuAClubsClubIdClubAdminsRoute
  '/_menu/a/clubs/$clubId/_club/dashboard': typeof MenuAClubsClubIdClubDashboardRoute
  '/_menu/a/clubs/$clubId/_club/domains': typeof MenuAClubsClubIdClubDomainsRoute
  '/_menu/a/clubs/$clubId/_club/members': typeof MenuAClubsClubIdClubMembersRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/profile'
    | '/invites/$inviteId'
    | '/'
    | '/links/invite/$inviteId'
    | '/a/admins'
    | '/a/clubs'
    | '/a/clubs/$clubId'
    | '/a/clubs/$clubId/admins'
    | '/a/clubs/$clubId/dashboard'
    | '/a/clubs/$clubId/domains'
    | '/a/clubs/$clubId/members'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/profile'
    | '/invites/$inviteId'
    | '/'
    | '/links/invite/$inviteId'
    | '/a/admins'
    | '/a/clubs'
    | '/a/clubs/$clubId'
    | '/a/clubs/$clubId/admins'
    | '/a/clubs/$clubId/dashboard'
    | '/a/clubs/$clubId/domains'
    | '/a/clubs/$clubId/members'
  id:
    | '__root__'
    | '/_menu'
    | '/_menu/profile'
    | '/invites/$inviteId'
    | '/_menu/'
    | '/links/invite/$inviteId'
    | '/_menu/a/admins/'
    | '/_menu/a/clubs/'
    | '/_menu/a/clubs/$clubId'
    | '/_menu/a/clubs/$clubId/_club'
    | '/_menu/a/clubs/$clubId/_club/admins'
    | '/_menu/a/clubs/$clubId/_club/dashboard'
    | '/_menu/a/clubs/$clubId/_club/domains'
    | '/_menu/a/clubs/$clubId/_club/members'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MenuLazyRoute: typeof MenuLazyRouteWithChildren
  InvitesInviteIdRoute: typeof InvitesInviteIdRoute
  LinksInviteInviteIdRoute: typeof LinksInviteInviteIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_menu': {
      id: '/_menu'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MenuLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_menu/': {
      id: '/_menu/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MenuIndexRouteImport
      parentRoute: typeof MenuLazyRoute
    }
    '/invites/$inviteId': {
      id: '/invites/$inviteId'
      path: '/invites/$inviteId'
      fullPath: '/invites/$inviteId'
      preLoaderRoute: typeof InvitesInviteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_menu/profile': {
      id: '/_menu/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof MenuProfileRouteImport
      parentRoute: typeof MenuLazyRoute
    }
    '/links/invite/$inviteId': {
      id: '/links/invite/$inviteId'
      path: '/links/invite/$inviteId'
      fullPath: '/links/invite/$inviteId'
      preLoaderRoute: typeof LinksInviteInviteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_menu/a/clubs/$clubId': {
      id: '/_menu/a/clubs/$clubId'
      path: '/a/clubs/$clubId'
      fullPath: '/a/clubs/$clubId'
      preLoaderRoute: typeof MenuAClubsClubIdRouteImport
      parentRoute: typeof MenuLazyRoute
    }
    '/_menu/a/clubs/': {
      id: '/_menu/a/clubs/'
      path: '/a/clubs'
      fullPath: '/a/clubs'
      preLoaderRoute: typeof MenuAClubsIndexRouteImport
      parentRoute: typeof MenuLazyRoute
    }
    '/_menu/a/admins/': {
      id: '/_menu/a/admins/'
      path: '/a/admins'
      fullPath: '/a/admins'
      preLoaderRoute: typeof MenuAAdminsIndexRouteImport
      parentRoute: typeof MenuLazyRoute
    }
    '/_menu/a/clubs/$clubId/_club': {
      id: '/_menu/a/clubs/$clubId/_club'
      path: '/a/clubs/$clubId'
      fullPath: '/a/clubs/$clubId'
      preLoaderRoute: typeof MenuAClubsClubIdClubRouteImport
      parentRoute: typeof MenuAClubsClubIdRoute
    }
    '/_menu/a/clubs/$clubId/_club/members': {
      id: '/_menu/a/clubs/$clubId/_club/members'
      path: '/members'
      fullPath: '/a/clubs/$clubId/members'
      preLoaderRoute: typeof MenuAClubsClubIdClubMembersRouteImport
      parentRoute: typeof MenuAClubsClubIdClubRoute
    }
    '/_menu/a/clubs/$clubId/_club/domains': {
      id: '/_menu/a/clubs/$clubId/_club/domains'
      path: '/domains'
      fullPath: '/a/clubs/$clubId/domains'
      preLoaderRoute: typeof MenuAClubsClubIdClubDomainsRouteImport
      parentRoute: typeof MenuAClubsClubIdClubRoute
    }
    '/_menu/a/clubs/$clubId/_club/dashboard': {
      id: '/_menu/a/clubs/$clubId/_club/dashboard'
      path: '/dashboard'
      fullPath: '/a/clubs/$clubId/dashboard'
      preLoaderRoute: typeof MenuAClubsClubIdClubDashboardRouteImport
      parentRoute: typeof MenuAClubsClubIdClubRoute
    }
    '/_menu/a/clubs/$clubId/_club/admins': {
      id: '/_menu/a/clubs/$clubId/_club/admins'
      path: '/admins'
      fullPath: '/a/clubs/$clubId/admins'
      preLoaderRoute: typeof MenuAClubsClubIdClubAdminsRouteImport
      parentRoute: typeof MenuAClubsClubIdClubRoute
    }
  }
}

interface MenuAClubsClubIdClubRouteChildren {
  MenuAClubsClubIdClubAdminsRoute: typeof MenuAClubsClubIdClubAdminsRoute
  MenuAClubsClubIdClubDashboardRoute: typeof MenuAClubsClubIdClubDashboardRoute
  MenuAClubsClubIdClubDomainsRoute: typeof MenuAClubsClubIdClubDomainsRoute
  MenuAClubsClubIdClubMembersRoute: typeof MenuAClubsClubIdClubMembersRoute
}

const MenuAClubsClubIdClubRouteChildren: MenuAClubsClubIdClubRouteChildren = {
  MenuAClubsClubIdClubAdminsRoute: MenuAClubsClubIdClubAdminsRoute,
  MenuAClubsClubIdClubDashboardRoute: MenuAClubsClubIdClubDashboardRoute,
  MenuAClubsClubIdClubDomainsRoute: MenuAClubsClubIdClubDomainsRoute,
  MenuAClubsClubIdClubMembersRoute: MenuAClubsClubIdClubMembersRoute,
}

const MenuAClubsClubIdClubRouteWithChildren =
  MenuAClubsClubIdClubRoute._addFileChildren(MenuAClubsClubIdClubRouteChildren)

interface MenuAClubsClubIdRouteChildren {
  MenuAClubsClubIdClubRoute: typeof MenuAClubsClubIdClubRouteWithChildren
}

const MenuAClubsClubIdRouteChildren: MenuAClubsClubIdRouteChildren = {
  MenuAClubsClubIdClubRoute: MenuAClubsClubIdClubRouteWithChildren,
}

const MenuAClubsClubIdRouteWithChildren =
  MenuAClubsClubIdRoute._addFileChildren(MenuAClubsClubIdRouteChildren)

interface MenuLazyRouteChildren {
  MenuProfileRoute: typeof MenuProfileRoute
  MenuIndexRoute: typeof MenuIndexRoute
  MenuAAdminsIndexRoute: typeof MenuAAdminsIndexRoute
  MenuAClubsIndexRoute: typeof MenuAClubsIndexRoute
  MenuAClubsClubIdRoute: typeof MenuAClubsClubIdRouteWithChildren
}

const MenuLazyRouteChildren: MenuLazyRouteChildren = {
  MenuProfileRoute: MenuProfileRoute,
  MenuIndexRoute: MenuIndexRoute,
  MenuAAdminsIndexRoute: MenuAAdminsIndexRoute,
  MenuAClubsIndexRoute: MenuAClubsIndexRoute,
  MenuAClubsClubIdRoute: MenuAClubsClubIdRouteWithChildren,
}

const MenuLazyRouteWithChildren = MenuLazyRoute._addFileChildren(
  MenuLazyRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  MenuLazyRoute: MenuLazyRouteWithChildren,
  InvitesInviteIdRoute: InvitesInviteIdRoute,
  LinksInviteInviteIdRoute: LinksInviteInviteIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
