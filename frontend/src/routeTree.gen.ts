/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UserUProfileImport } from './routes/_user/u/_profile'
import { Route as ClubAdminCaDashboardImport } from './routes/_club-admin/ca/dashboard'
import { Route as ClubAdminCaProfileImport } from './routes/_club-admin/ca/_profile'
import { Route as AdminADashboardImport } from './routes/_admin/a/dashboard'
import { Route as AdminAProfileImport } from './routes/_admin/a/_profile'
import { Route as UserUWebsitesIndexImport } from './routes/_user/u/websites/index'
import { Route as UserUMailIndexImport } from './routes/_user/u/mail/index'
import { Route as UserUWebsitesCreateImport } from './routes/_user/u/websites/create'
import { Route as UserUWebsitesWebsiteIdImport } from './routes/_user/u/websites/$websiteId'
import { Route as AdminAClubsCreateImport } from './routes/_admin/a/clubs/create'
import { Route as AdminAClubsClubIdImport } from './routes/_admin/a/clubs/$clubId'
import { Route as UserUProfileProfileSecurityImport } from './routes/_user/u/_profile/profile/security'
import { Route as UserUProfileProfileGeneralImport } from './routes/_user/u/_profile/profile/general'
import { Route as ClubAdminCaProfileProfileSecurityImport } from './routes/_club-admin/ca/_profile/profile/security'
import { Route as ClubAdminCaProfileProfileGeneralImport } from './routes/_club-admin/ca/_profile/profile/general'
import { Route as AdminAProfileProfileSecurityImport } from './routes/_admin/a/_profile/profile/security'
import { Route as AdminAProfileProfileGeneralImport } from './routes/_admin/a/_profile/profile/general'

// Create Virtual Routes

const UserLazyImport = createFileRoute('/_user')()
const ClubAdminLazyImport = createFileRoute('/_club-admin')()
const AdminLazyImport = createFileRoute('/_admin')()
const UserUImport = createFileRoute('/_user/u')()
const ClubAdminCaImport = createFileRoute('/_club-admin/ca')()
const AdminAImport = createFileRoute('/_admin/a')()

// Create/Update Routes

const UserLazyRoute = UserLazyImport.update({
  id: '/_user',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_user.lazy').then((d) => d.Route))

const ClubAdminLazyRoute = ClubAdminLazyImport.update({
  id: '/_club-admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_club-admin.lazy').then((d) => d.Route))

const AdminLazyRoute = AdminLazyImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_admin.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserURoute = UserUImport.update({
  path: '/u',
  getParentRoute: () => UserLazyRoute,
} as any)

const ClubAdminCaRoute = ClubAdminCaImport.update({
  path: '/ca',
  getParentRoute: () => ClubAdminLazyRoute,
} as any)

const AdminARoute = AdminAImport.update({
  path: '/a',
  getParentRoute: () => AdminLazyRoute,
} as any)

const UserUProfileRoute = UserUProfileImport.update({
  id: '/_profile',
  getParentRoute: () => UserURoute,
} as any)

const ClubAdminCaDashboardRoute = ClubAdminCaDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => ClubAdminCaRoute,
} as any)

const ClubAdminCaProfileRoute = ClubAdminCaProfileImport.update({
  id: '/_profile',
  getParentRoute: () => ClubAdminCaRoute,
} as any)

const AdminADashboardRoute = AdminADashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AdminARoute,
} as any)

const AdminAProfileRoute = AdminAProfileImport.update({
  id: '/_profile',
  getParentRoute: () => AdminARoute,
} as any)

const UserUWebsitesIndexRoute = UserUWebsitesIndexImport.update({
  path: '/websites/',
  getParentRoute: () => UserURoute,
} as any)

const UserUMailIndexRoute = UserUMailIndexImport.update({
  path: '/mail/',
  getParentRoute: () => UserURoute,
} as any)

const UserUWebsitesCreateRoute = UserUWebsitesCreateImport.update({
  path: '/websites/create',
  getParentRoute: () => UserURoute,
} as any)

const UserUWebsitesWebsiteIdRoute = UserUWebsitesWebsiteIdImport.update({
  path: '/websites/$websiteId',
  getParentRoute: () => UserURoute,
} as any)

const AdminAClubsCreateRoute = AdminAClubsCreateImport.update({
  path: '/clubs/create',
  getParentRoute: () => AdminARoute,
} as any)

const AdminAClubsClubIdRoute = AdminAClubsClubIdImport.update({
  path: '/clubs/$clubId',
  getParentRoute: () => AdminARoute,
} as any)

const UserUProfileProfileSecurityRoute =
  UserUProfileProfileSecurityImport.update({
    path: '/profile/security',
    getParentRoute: () => UserUProfileRoute,
  } as any)

const UserUProfileProfileGeneralRoute = UserUProfileProfileGeneralImport.update(
  {
    path: '/profile/general',
    getParentRoute: () => UserUProfileRoute,
  } as any,
)

const ClubAdminCaProfileProfileSecurityRoute =
  ClubAdminCaProfileProfileSecurityImport.update({
    path: '/profile/security',
    getParentRoute: () => ClubAdminCaProfileRoute,
  } as any)

const ClubAdminCaProfileProfileGeneralRoute =
  ClubAdminCaProfileProfileGeneralImport.update({
    path: '/profile/general',
    getParentRoute: () => ClubAdminCaProfileRoute,
  } as any)

const AdminAProfileProfileSecurityRoute =
  AdminAProfileProfileSecurityImport.update({
    path: '/profile/security',
    getParentRoute: () => AdminAProfileRoute,
  } as any)

const AdminAProfileProfileGeneralRoute =
  AdminAProfileProfileGeneralImport.update({
    path: '/profile/general',
    getParentRoute: () => AdminAProfileRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminLazyImport
      parentRoute: typeof rootRoute
    }
    '/_club-admin': {
      id: '/_club-admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ClubAdminLazyImport
      parentRoute: typeof rootRoute
    }
    '/_user': {
      id: '/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UserLazyImport
      parentRoute: typeof rootRoute
    }
    '/_admin/a': {
      id: '/_admin/a'
      path: '/a'
      fullPath: '/a'
      preLoaderRoute: typeof AdminAImport
      parentRoute: typeof AdminLazyImport
    }
    '/_admin/a/_profile': {
      id: '/_admin/a/_profile'
      path: '/a'
      fullPath: '/a'
      preLoaderRoute: typeof AdminAProfileImport
      parentRoute: typeof AdminARoute
    }
    '/_admin/a/dashboard': {
      id: '/_admin/a/dashboard'
      path: '/dashboard'
      fullPath: '/a/dashboard'
      preLoaderRoute: typeof AdminADashboardImport
      parentRoute: typeof AdminAImport
    }
    '/_club-admin/ca': {
      id: '/_club-admin/ca'
      path: '/ca'
      fullPath: '/ca'
      preLoaderRoute: typeof ClubAdminCaImport
      parentRoute: typeof ClubAdminLazyImport
    }
    '/_club-admin/ca/_profile': {
      id: '/_club-admin/ca/_profile'
      path: '/ca'
      fullPath: '/ca'
      preLoaderRoute: typeof ClubAdminCaProfileImport
      parentRoute: typeof ClubAdminCaRoute
    }
    '/_club-admin/ca/dashboard': {
      id: '/_club-admin/ca/dashboard'
      path: '/dashboard'
      fullPath: '/ca/dashboard'
      preLoaderRoute: typeof ClubAdminCaDashboardImport
      parentRoute: typeof ClubAdminCaImport
    }
    '/_user/u': {
      id: '/_user/u'
      path: '/u'
      fullPath: '/u'
      preLoaderRoute: typeof UserUImport
      parentRoute: typeof UserLazyImport
    }
    '/_user/u/_profile': {
      id: '/_user/u/_profile'
      path: '/u'
      fullPath: '/u'
      preLoaderRoute: typeof UserUProfileImport
      parentRoute: typeof UserURoute
    }
    '/_admin/a/clubs/$clubId': {
      id: '/_admin/a/clubs/$clubId'
      path: '/clubs/$clubId'
      fullPath: '/a/clubs/$clubId'
      preLoaderRoute: typeof AdminAClubsClubIdImport
      parentRoute: typeof AdminAImport
    }
    '/_admin/a/clubs/create': {
      id: '/_admin/a/clubs/create'
      path: '/clubs/create'
      fullPath: '/a/clubs/create'
      preLoaderRoute: typeof AdminAClubsCreateImport
      parentRoute: typeof AdminAImport
    }
    '/_user/u/websites/$websiteId': {
      id: '/_user/u/websites/$websiteId'
      path: '/websites/$websiteId'
      fullPath: '/u/websites/$websiteId'
      preLoaderRoute: typeof UserUWebsitesWebsiteIdImport
      parentRoute: typeof UserUImport
    }
    '/_user/u/websites/create': {
      id: '/_user/u/websites/create'
      path: '/websites/create'
      fullPath: '/u/websites/create'
      preLoaderRoute: typeof UserUWebsitesCreateImport
      parentRoute: typeof UserUImport
    }
    '/_user/u/mail/': {
      id: '/_user/u/mail/'
      path: '/mail'
      fullPath: '/u/mail'
      preLoaderRoute: typeof UserUMailIndexImport
      parentRoute: typeof UserUImport
    }
    '/_user/u/websites/': {
      id: '/_user/u/websites/'
      path: '/websites'
      fullPath: '/u/websites'
      preLoaderRoute: typeof UserUWebsitesIndexImport
      parentRoute: typeof UserUImport
    }
    '/_admin/a/_profile/profile/general': {
      id: '/_admin/a/_profile/profile/general'
      path: '/profile/general'
      fullPath: '/a/profile/general'
      preLoaderRoute: typeof AdminAProfileProfileGeneralImport
      parentRoute: typeof AdminAProfileImport
    }
    '/_admin/a/_profile/profile/security': {
      id: '/_admin/a/_profile/profile/security'
      path: '/profile/security'
      fullPath: '/a/profile/security'
      preLoaderRoute: typeof AdminAProfileProfileSecurityImport
      parentRoute: typeof AdminAProfileImport
    }
    '/_club-admin/ca/_profile/profile/general': {
      id: '/_club-admin/ca/_profile/profile/general'
      path: '/profile/general'
      fullPath: '/ca/profile/general'
      preLoaderRoute: typeof ClubAdminCaProfileProfileGeneralImport
      parentRoute: typeof ClubAdminCaProfileImport
    }
    '/_club-admin/ca/_profile/profile/security': {
      id: '/_club-admin/ca/_profile/profile/security'
      path: '/profile/security'
      fullPath: '/ca/profile/security'
      preLoaderRoute: typeof ClubAdminCaProfileProfileSecurityImport
      parentRoute: typeof ClubAdminCaProfileImport
    }
    '/_user/u/_profile/profile/general': {
      id: '/_user/u/_profile/profile/general'
      path: '/profile/general'
      fullPath: '/u/profile/general'
      preLoaderRoute: typeof UserUProfileProfileGeneralImport
      parentRoute: typeof UserUProfileImport
    }
    '/_user/u/_profile/profile/security': {
      id: '/_user/u/_profile/profile/security'
      path: '/profile/security'
      fullPath: '/u/profile/security'
      preLoaderRoute: typeof UserUProfileProfileSecurityImport
      parentRoute: typeof UserUProfileImport
    }
  }
}

// Create and export the route tree

interface AdminAProfileRouteChildren {
  AdminAProfileProfileGeneralRoute: typeof AdminAProfileProfileGeneralRoute
  AdminAProfileProfileSecurityRoute: typeof AdminAProfileProfileSecurityRoute
}

const AdminAProfileRouteChildren: AdminAProfileRouteChildren = {
  AdminAProfileProfileGeneralRoute: AdminAProfileProfileGeneralRoute,
  AdminAProfileProfileSecurityRoute: AdminAProfileProfileSecurityRoute,
}

const AdminAProfileRouteWithChildren = AdminAProfileRoute._addFileChildren(
  AdminAProfileRouteChildren,
)

interface AdminARouteChildren {
  AdminAProfileRoute: typeof AdminAProfileRouteWithChildren
  AdminADashboardRoute: typeof AdminADashboardRoute
  AdminAClubsClubIdRoute: typeof AdminAClubsClubIdRoute
  AdminAClubsCreateRoute: typeof AdminAClubsCreateRoute
}

const AdminARouteChildren: AdminARouteChildren = {
  AdminAProfileRoute: AdminAProfileRouteWithChildren,
  AdminADashboardRoute: AdminADashboardRoute,
  AdminAClubsClubIdRoute: AdminAClubsClubIdRoute,
  AdminAClubsCreateRoute: AdminAClubsCreateRoute,
}

const AdminARouteWithChildren =
  AdminARoute._addFileChildren(AdminARouteChildren)

interface AdminLazyRouteChildren {
  AdminARoute: typeof AdminARouteWithChildren
}

const AdminLazyRouteChildren: AdminLazyRouteChildren = {
  AdminARoute: AdminARouteWithChildren,
}

const AdminLazyRouteWithChildren = AdminLazyRoute._addFileChildren(
  AdminLazyRouteChildren,
)

interface ClubAdminCaProfileRouteChildren {
  ClubAdminCaProfileProfileGeneralRoute: typeof ClubAdminCaProfileProfileGeneralRoute
  ClubAdminCaProfileProfileSecurityRoute: typeof ClubAdminCaProfileProfileSecurityRoute
}

const ClubAdminCaProfileRouteChildren: ClubAdminCaProfileRouteChildren = {
  ClubAdminCaProfileProfileGeneralRoute: ClubAdminCaProfileProfileGeneralRoute,
  ClubAdminCaProfileProfileSecurityRoute:
    ClubAdminCaProfileProfileSecurityRoute,
}

const ClubAdminCaProfileRouteWithChildren =
  ClubAdminCaProfileRoute._addFileChildren(ClubAdminCaProfileRouteChildren)

interface ClubAdminCaRouteChildren {
  ClubAdminCaProfileRoute: typeof ClubAdminCaProfileRouteWithChildren
  ClubAdminCaDashboardRoute: typeof ClubAdminCaDashboardRoute
}

const ClubAdminCaRouteChildren: ClubAdminCaRouteChildren = {
  ClubAdminCaProfileRoute: ClubAdminCaProfileRouteWithChildren,
  ClubAdminCaDashboardRoute: ClubAdminCaDashboardRoute,
}

const ClubAdminCaRouteWithChildren = ClubAdminCaRoute._addFileChildren(
  ClubAdminCaRouteChildren,
)

interface ClubAdminLazyRouteChildren {
  ClubAdminCaRoute: typeof ClubAdminCaRouteWithChildren
}

const ClubAdminLazyRouteChildren: ClubAdminLazyRouteChildren = {
  ClubAdminCaRoute: ClubAdminCaRouteWithChildren,
}

const ClubAdminLazyRouteWithChildren = ClubAdminLazyRoute._addFileChildren(
  ClubAdminLazyRouteChildren,
)

interface UserUProfileRouteChildren {
  UserUProfileProfileGeneralRoute: typeof UserUProfileProfileGeneralRoute
  UserUProfileProfileSecurityRoute: typeof UserUProfileProfileSecurityRoute
}

const UserUProfileRouteChildren: UserUProfileRouteChildren = {
  UserUProfileProfileGeneralRoute: UserUProfileProfileGeneralRoute,
  UserUProfileProfileSecurityRoute: UserUProfileProfileSecurityRoute,
}

const UserUProfileRouteWithChildren = UserUProfileRoute._addFileChildren(
  UserUProfileRouteChildren,
)

interface UserURouteChildren {
  UserUProfileRoute: typeof UserUProfileRouteWithChildren
  UserUWebsitesWebsiteIdRoute: typeof UserUWebsitesWebsiteIdRoute
  UserUWebsitesCreateRoute: typeof UserUWebsitesCreateRoute
  UserUMailIndexRoute: typeof UserUMailIndexRoute
  UserUWebsitesIndexRoute: typeof UserUWebsitesIndexRoute
}

const UserURouteChildren: UserURouteChildren = {
  UserUProfileRoute: UserUProfileRouteWithChildren,
  UserUWebsitesWebsiteIdRoute: UserUWebsitesWebsiteIdRoute,
  UserUWebsitesCreateRoute: UserUWebsitesCreateRoute,
  UserUMailIndexRoute: UserUMailIndexRoute,
  UserUWebsitesIndexRoute: UserUWebsitesIndexRoute,
}

const UserURouteWithChildren = UserURoute._addFileChildren(UserURouteChildren)

interface UserLazyRouteChildren {
  UserURoute: typeof UserURouteWithChildren
}

const UserLazyRouteChildren: UserLazyRouteChildren = {
  UserURoute: UserURouteWithChildren,
}

const UserLazyRouteWithChildren = UserLazyRoute._addFileChildren(
  UserLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof UserLazyRouteWithChildren
  '/a': typeof AdminAProfileRouteWithChildren
  '/a/dashboard': typeof AdminADashboardRoute
  '/ca': typeof ClubAdminCaProfileRouteWithChildren
  '/ca/dashboard': typeof ClubAdminCaDashboardRoute
  '/u': typeof UserUProfileRouteWithChildren
  '/a/clubs/$clubId': typeof AdminAClubsClubIdRoute
  '/a/clubs/create': typeof AdminAClubsCreateRoute
  '/u/websites/$websiteId': typeof UserUWebsitesWebsiteIdRoute
  '/u/websites/create': typeof UserUWebsitesCreateRoute
  '/u/mail': typeof UserUMailIndexRoute
  '/u/websites': typeof UserUWebsitesIndexRoute
  '/a/profile/general': typeof AdminAProfileProfileGeneralRoute
  '/a/profile/security': typeof AdminAProfileProfileSecurityRoute
  '/ca/profile/general': typeof ClubAdminCaProfileProfileGeneralRoute
  '/ca/profile/security': typeof ClubAdminCaProfileProfileSecurityRoute
  '/u/profile/general': typeof UserUProfileProfileGeneralRoute
  '/u/profile/security': typeof UserUProfileProfileSecurityRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof UserLazyRouteWithChildren
  '/a': typeof AdminAProfileRouteWithChildren
  '/a/dashboard': typeof AdminADashboardRoute
  '/ca': typeof ClubAdminCaProfileRouteWithChildren
  '/ca/dashboard': typeof ClubAdminCaDashboardRoute
  '/u': typeof UserUProfileRouteWithChildren
  '/a/clubs/$clubId': typeof AdminAClubsClubIdRoute
  '/a/clubs/create': typeof AdminAClubsCreateRoute
  '/u/websites/$websiteId': typeof UserUWebsitesWebsiteIdRoute
  '/u/websites/create': typeof UserUWebsitesCreateRoute
  '/u/mail': typeof UserUMailIndexRoute
  '/u/websites': typeof UserUWebsitesIndexRoute
  '/a/profile/general': typeof AdminAProfileProfileGeneralRoute
  '/a/profile/security': typeof AdminAProfileProfileSecurityRoute
  '/ca/profile/general': typeof ClubAdminCaProfileProfileGeneralRoute
  '/ca/profile/security': typeof ClubAdminCaProfileProfileSecurityRoute
  '/u/profile/general': typeof UserUProfileProfileGeneralRoute
  '/u/profile/security': typeof UserUProfileProfileSecurityRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_admin': typeof AdminLazyRouteWithChildren
  '/_club-admin': typeof ClubAdminLazyRouteWithChildren
  '/_user': typeof UserLazyRouteWithChildren
  '/_admin/a': typeof AdminARouteWithChildren
  '/_admin/a/_profile': typeof AdminAProfileRouteWithChildren
  '/_admin/a/dashboard': typeof AdminADashboardRoute
  '/_club-admin/ca': typeof ClubAdminCaRouteWithChildren
  '/_club-admin/ca/_profile': typeof ClubAdminCaProfileRouteWithChildren
  '/_club-admin/ca/dashboard': typeof ClubAdminCaDashboardRoute
  '/_user/u': typeof UserURouteWithChildren
  '/_user/u/_profile': typeof UserUProfileRouteWithChildren
  '/_admin/a/clubs/$clubId': typeof AdminAClubsClubIdRoute
  '/_admin/a/clubs/create': typeof AdminAClubsCreateRoute
  '/_user/u/websites/$websiteId': typeof UserUWebsitesWebsiteIdRoute
  '/_user/u/websites/create': typeof UserUWebsitesCreateRoute
  '/_user/u/mail/': typeof UserUMailIndexRoute
  '/_user/u/websites/': typeof UserUWebsitesIndexRoute
  '/_admin/a/_profile/profile/general': typeof AdminAProfileProfileGeneralRoute
  '/_admin/a/_profile/profile/security': typeof AdminAProfileProfileSecurityRoute
  '/_club-admin/ca/_profile/profile/general': typeof ClubAdminCaProfileProfileGeneralRoute
  '/_club-admin/ca/_profile/profile/security': typeof ClubAdminCaProfileProfileSecurityRoute
  '/_user/u/_profile/profile/general': typeof UserUProfileProfileGeneralRoute
  '/_user/u/_profile/profile/security': typeof UserUProfileProfileSecurityRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/a'
    | '/a/dashboard'
    | '/ca'
    | '/ca/dashboard'
    | '/u'
    | '/a/clubs/$clubId'
    | '/a/clubs/create'
    | '/u/websites/$websiteId'
    | '/u/websites/create'
    | '/u/mail'
    | '/u/websites'
    | '/a/profile/general'
    | '/a/profile/security'
    | '/ca/profile/general'
    | '/ca/profile/security'
    | '/u/profile/general'
    | '/u/profile/security'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/a'
    | '/a/dashboard'
    | '/ca'
    | '/ca/dashboard'
    | '/u'
    | '/a/clubs/$clubId'
    | '/a/clubs/create'
    | '/u/websites/$websiteId'
    | '/u/websites/create'
    | '/u/mail'
    | '/u/websites'
    | '/a/profile/general'
    | '/a/profile/security'
    | '/ca/profile/general'
    | '/ca/profile/security'
    | '/u/profile/general'
    | '/u/profile/security'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_club-admin'
    | '/_user'
    | '/_admin/a'
    | '/_admin/a/_profile'
    | '/_admin/a/dashboard'
    | '/_club-admin/ca'
    | '/_club-admin/ca/_profile'
    | '/_club-admin/ca/dashboard'
    | '/_user/u'
    | '/_user/u/_profile'
    | '/_admin/a/clubs/$clubId'
    | '/_admin/a/clubs/create'
    | '/_user/u/websites/$websiteId'
    | '/_user/u/websites/create'
    | '/_user/u/mail/'
    | '/_user/u/websites/'
    | '/_admin/a/_profile/profile/general'
    | '/_admin/a/_profile/profile/security'
    | '/_club-admin/ca/_profile/profile/general'
    | '/_club-admin/ca/_profile/profile/security'
    | '/_user/u/_profile/profile/general'
    | '/_user/u/_profile/profile/security'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminLazyRoute: typeof AdminLazyRouteWithChildren
  ClubAdminLazyRoute: typeof ClubAdminLazyRouteWithChildren
  UserLazyRoute: typeof UserLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminLazyRoute: AdminLazyRouteWithChildren,
  ClubAdminLazyRoute: ClubAdminLazyRouteWithChildren,
  UserLazyRoute: UserLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/_club-admin",
        "/_user"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_admin": {
      "filePath": "_admin.lazy.tsx",
      "children": [
        "/_admin/a"
      ]
    },
    "/_club-admin": {
      "filePath": "_club-admin.lazy.tsx",
      "children": [
        "/_club-admin/ca"
      ]
    },
    "/_user": {
      "filePath": "_user.lazy.tsx",
      "children": [
        "/_user/u"
      ]
    },
    "/_admin/a": {
      "filePath": "_admin/a",
      "parent": "/_admin",
      "children": [
        "/_admin/a/_profile",
        "/_admin/a/dashboard",
        "/_admin/a/clubs/$clubId",
        "/_admin/a/clubs/create"
      ]
    },
    "/_admin/a/_profile": {
      "filePath": "_admin/a/_profile.tsx",
      "parent": "/_admin/a",
      "children": [
        "/_admin/a/_profile/profile/general",
        "/_admin/a/_profile/profile/security"
      ]
    },
    "/_admin/a/dashboard": {
      "filePath": "_admin/a/dashboard.tsx",
      "parent": "/_admin/a"
    },
    "/_club-admin/ca": {
      "filePath": "_club-admin/ca",
      "parent": "/_club-admin",
      "children": [
        "/_club-admin/ca/_profile",
        "/_club-admin/ca/dashboard"
      ]
    },
    "/_club-admin/ca/_profile": {
      "filePath": "_club-admin/ca/_profile.tsx",
      "parent": "/_club-admin/ca",
      "children": [
        "/_club-admin/ca/_profile/profile/general",
        "/_club-admin/ca/_profile/profile/security"
      ]
    },
    "/_club-admin/ca/dashboard": {
      "filePath": "_club-admin/ca/dashboard.tsx",
      "parent": "/_club-admin/ca"
    },
    "/_user/u": {
      "filePath": "_user/u",
      "parent": "/_user",
      "children": [
        "/_user/u/_profile",
        "/_user/u/websites/$websiteId",
        "/_user/u/websites/create",
        "/_user/u/mail/",
        "/_user/u/websites/"
      ]
    },
    "/_user/u/_profile": {
      "filePath": "_user/u/_profile.tsx",
      "parent": "/_user/u",
      "children": [
        "/_user/u/_profile/profile/general",
        "/_user/u/_profile/profile/security"
      ]
    },
    "/_admin/a/clubs/$clubId": {
      "filePath": "_admin/a/clubs/$clubId.tsx",
      "parent": "/_admin/a"
    },
    "/_admin/a/clubs/create": {
      "filePath": "_admin/a/clubs/create.tsx",
      "parent": "/_admin/a"
    },
    "/_user/u/websites/$websiteId": {
      "filePath": "_user/u/websites/$websiteId.tsx",
      "parent": "/_user/u"
    },
    "/_user/u/websites/create": {
      "filePath": "_user/u/websites/create.tsx",
      "parent": "/_user/u"
    },
    "/_user/u/mail/": {
      "filePath": "_user/u/mail/index.tsx",
      "parent": "/_user/u"
    },
    "/_user/u/websites/": {
      "filePath": "_user/u/websites/index.tsx",
      "parent": "/_user/u"
    },
    "/_admin/a/_profile/profile/general": {
      "filePath": "_admin/a/_profile/profile/general.tsx",
      "parent": "/_admin/a/_profile"
    },
    "/_admin/a/_profile/profile/security": {
      "filePath": "_admin/a/_profile/profile/security.tsx",
      "parent": "/_admin/a/_profile"
    },
    "/_club-admin/ca/_profile/profile/general": {
      "filePath": "_club-admin/ca/_profile/profile/general.tsx",
      "parent": "/_club-admin/ca/_profile"
    },
    "/_club-admin/ca/_profile/profile/security": {
      "filePath": "_club-admin/ca/_profile/profile/security.tsx",
      "parent": "/_club-admin/ca/_profile"
    },
    "/_user/u/_profile/profile/general": {
      "filePath": "_user/u/_profile/profile/general.tsx",
      "parent": "/_user/u/_profile"
    },
    "/_user/u/_profile/profile/security": {
      "filePath": "_user/u/_profile/profile/security.tsx",
      "parent": "/_user/u/_profile"
    }
  }
}
ROUTE_MANIFEST_END */
