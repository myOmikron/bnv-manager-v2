/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MenuImport } from './routes/_menu'
import { Route as MenuIndexImport } from './routes/_menu/index'
import { Route as InvitesInviteIdImport } from './routes/invites/$inviteId'
import { Route as MenuProfileImport } from './routes/_menu/profile'
import { Route as MenuAClubsIndexImport } from './routes/_menu/a/clubs/index'

// Create/Update Routes

const MenuRoute = MenuImport.update({
  id: '/_menu',
  getParentRoute: () => rootRoute,
} as any)

const MenuIndexRoute = MenuIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MenuRoute,
} as any)

const InvitesInviteIdRoute = InvitesInviteIdImport.update({
  id: '/invites/$inviteId',
  path: '/invites/$inviteId',
  getParentRoute: () => rootRoute,
} as any)

const MenuProfileRoute = MenuProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => MenuRoute,
} as any)

const MenuAClubsIndexRoute = MenuAClubsIndexImport.update({
  id: '/a/clubs/',
  path: '/a/clubs/',
  getParentRoute: () => MenuRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_menu': {
      id: '/_menu'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MenuImport
      parentRoute: typeof rootRoute
    }
    '/_menu/profile': {
      id: '/_menu/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof MenuProfileImport
      parentRoute: typeof MenuImport
    }
    '/invites/$inviteId': {
      id: '/invites/$inviteId'
      path: '/invites/$inviteId'
      fullPath: '/invites/$inviteId'
      preLoaderRoute: typeof InvitesInviteIdImport
      parentRoute: typeof rootRoute
    }
    '/_menu/': {
      id: '/_menu/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MenuIndexImport
      parentRoute: typeof MenuImport
    }
    '/_menu/a/clubs/': {
      id: '/_menu/a/clubs/'
      path: '/a/clubs'
      fullPath: '/a/clubs'
      preLoaderRoute: typeof MenuAClubsIndexImport
      parentRoute: typeof MenuImport
    }
  }
}

// Create and export the route tree

interface MenuRouteChildren {
  MenuProfileRoute: typeof MenuProfileRoute
  MenuIndexRoute: typeof MenuIndexRoute
  MenuAClubsIndexRoute: typeof MenuAClubsIndexRoute
}

const MenuRouteChildren: MenuRouteChildren = {
  MenuProfileRoute: MenuProfileRoute,
  MenuIndexRoute: MenuIndexRoute,
  MenuAClubsIndexRoute: MenuAClubsIndexRoute,
}

const MenuRouteWithChildren = MenuRoute._addFileChildren(MenuRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof MenuRouteWithChildren
  '/profile': typeof MenuProfileRoute
  '/invites/$inviteId': typeof InvitesInviteIdRoute
  '/': typeof MenuIndexRoute
  '/a/clubs': typeof MenuAClubsIndexRoute
}

export interface FileRoutesByTo {
  '/profile': typeof MenuProfileRoute
  '/invites/$inviteId': typeof InvitesInviteIdRoute
  '/': typeof MenuIndexRoute
  '/a/clubs': typeof MenuAClubsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_menu': typeof MenuRouteWithChildren
  '/_menu/profile': typeof MenuProfileRoute
  '/invites/$inviteId': typeof InvitesInviteIdRoute
  '/_menu/': typeof MenuIndexRoute
  '/_menu/a/clubs/': typeof MenuAClubsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/profile' | '/invites/$inviteId' | '/' | '/a/clubs'
  fileRoutesByTo: FileRoutesByTo
  to: '/profile' | '/invites/$inviteId' | '/' | '/a/clubs'
  id:
    | '__root__'
    | '/_menu'
    | '/_menu/profile'
    | '/invites/$inviteId'
    | '/_menu/'
    | '/_menu/a/clubs/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MenuRoute: typeof MenuRouteWithChildren
  InvitesInviteIdRoute: typeof InvitesInviteIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  MenuRoute: MenuRouteWithChildren,
  InvitesInviteIdRoute: InvitesInviteIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_menu",
        "/invites/$inviteId"
      ]
    },
    "/_menu": {
      "filePath": "_menu.tsx",
      "children": [
        "/_menu/profile",
        "/_menu/",
        "/_menu/a/clubs/"
      ]
    },
    "/_menu/profile": {
      "filePath": "_menu/profile.tsx",
      "parent": "/_menu"
    },
    "/invites/$inviteId": {
      "filePath": "invites/$inviteId.tsx"
    },
    "/_menu/": {
      "filePath": "_menu/index.tsx",
      "parent": "/_menu"
    },
    "/_menu/a/clubs/": {
      "filePath": "_menu/a/clubs/index.tsx",
      "parent": "/_menu"
    }
  }
}
ROUTE_MANIFEST_END */
