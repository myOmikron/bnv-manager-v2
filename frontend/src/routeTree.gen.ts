/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UserUProfileImport } from './routes/_user/u/profile'
import { Route as UserUWebsitesIndexImport } from './routes/_user/u/websites/index'
import { Route as UserUMailIndexImport } from './routes/_user/u/mail/index'
import { Route as UserUWebsitesCreateImport } from './routes/_user/u/websites/create'
import { Route as UserUWebsitesWebsiteIdImport } from './routes/_user/u/websites/$websiteId'

// Create Virtual Routes

const UserLazyImport = createFileRoute('/_user')()

// Create/Update Routes

const UserLazyRoute = UserLazyImport.update({
  id: '/_user',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_user.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UserUProfileRoute = UserUProfileImport.update({
  path: '/u/profile',
  getParentRoute: () => UserLazyRoute,
} as any)

const UserUWebsitesIndexRoute = UserUWebsitesIndexImport.update({
  path: '/u/websites/',
  getParentRoute: () => UserLazyRoute,
} as any)

const UserUMailIndexRoute = UserUMailIndexImport.update({
  path: '/u/mail/',
  getParentRoute: () => UserLazyRoute,
} as any)

const UserUWebsitesCreateRoute = UserUWebsitesCreateImport.update({
  path: '/u/websites/create',
  getParentRoute: () => UserLazyRoute,
} as any)

const UserUWebsitesWebsiteIdRoute = UserUWebsitesWebsiteIdImport.update({
  path: '/u/websites/$websiteId',
  getParentRoute: () => UserLazyRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_user': {
      id: '/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof UserLazyImport
      parentRoute: typeof rootRoute
    }
    '/_user/u/profile': {
      id: '/_user/u/profile'
      path: '/u/profile'
      fullPath: '/u/profile'
      preLoaderRoute: typeof UserUProfileImport
      parentRoute: typeof UserLazyImport
    }
    '/_user/u/websites/$websiteId': {
      id: '/_user/u/websites/$websiteId'
      path: '/u/websites/$websiteId'
      fullPath: '/u/websites/$websiteId'
      preLoaderRoute: typeof UserUWebsitesWebsiteIdImport
      parentRoute: typeof UserLazyImport
    }
    '/_user/u/websites/create': {
      id: '/_user/u/websites/create'
      path: '/u/websites/create'
      fullPath: '/u/websites/create'
      preLoaderRoute: typeof UserUWebsitesCreateImport
      parentRoute: typeof UserLazyImport
    }
    '/_user/u/mail/': {
      id: '/_user/u/mail/'
      path: '/u/mail'
      fullPath: '/u/mail'
      preLoaderRoute: typeof UserUMailIndexImport
      parentRoute: typeof UserLazyImport
    }
    '/_user/u/websites/': {
      id: '/_user/u/websites/'
      path: '/u/websites'
      fullPath: '/u/websites'
      preLoaderRoute: typeof UserUWebsitesIndexImport
      parentRoute: typeof UserLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  UserLazyRoute: UserLazyRoute.addChildren({
    UserUProfileRoute,
    UserUWebsitesWebsiteIdRoute,
    UserUWebsitesCreateRoute,
    UserUMailIndexRoute,
    UserUWebsitesIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_user"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_user": {
      "filePath": "_user.lazy.tsx",
      "children": [
        "/_user/u/profile",
        "/_user/u/websites/$websiteId",
        "/_user/u/websites/create",
        "/_user/u/mail/",
        "/_user/u/websites/"
      ]
    },
    "/_user/u/profile": {
      "filePath": "_user/u/profile.tsx",
      "parent": "/_user"
    },
    "/_user/u/websites/$websiteId": {
      "filePath": "_user/u/websites/$websiteId.tsx",
      "parent": "/_user"
    },
    "/_user/u/websites/create": {
      "filePath": "_user/u/websites/create.tsx",
      "parent": "/_user"
    },
    "/_user/u/mail/": {
      "filePath": "_user/u/mail/index.tsx",
      "parent": "/_user"
    },
    "/_user/u/websites/": {
      "filePath": "_user/u/websites/index.tsx",
      "parent": "/_user"
    }
  }
}
ROUTE_MANIFEST_END */
