/* tslint:disable */
/* eslint-disable */
/**
 * Frontend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The fields of the change password request
 * @export
 * @interface ChangePwFormFieldsOneOf
 */
export interface ChangePwFormFieldsOneOf {
    /**
     * 
     * @type {string}
     * @memberof ChangePwFormFieldsOneOf
     */
    error: ChangePwFormFieldsOneOfErrorEnum;
    /**
     * 
     * @type {string}
     * @memberof ChangePwFormFieldsOneOf
     */
    field: ChangePwFormFieldsOneOfFieldEnum;
}


/**
 * @export
 */
export const ChangePwFormFieldsOneOfErrorEnum = {
    Incorrect: 'Incorrect'
} as const;
export type ChangePwFormFieldsOneOfErrorEnum = typeof ChangePwFormFieldsOneOfErrorEnum[keyof typeof ChangePwFormFieldsOneOfErrorEnum];

/**
 * @export
 */
export const ChangePwFormFieldsOneOfFieldEnum = {
    CurrentPw: 'CurrentPw'
} as const;
export type ChangePwFormFieldsOneOfFieldEnum = typeof ChangePwFormFieldsOneOfFieldEnum[keyof typeof ChangePwFormFieldsOneOfFieldEnum];


/**
 * Check if a given object implements the ChangePwFormFieldsOneOf interface.
 */
export function instanceOfChangePwFormFieldsOneOf(value: object): value is ChangePwFormFieldsOneOf {
    if (!('error' in value) || value['error'] === undefined) return false;
    if (!('field' in value) || value['field'] === undefined) return false;
    return true;
}

export function ChangePwFormFieldsOneOfFromJSON(json: any): ChangePwFormFieldsOneOf {
    return ChangePwFormFieldsOneOfFromJSONTyped(json, false);
}

export function ChangePwFormFieldsOneOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangePwFormFieldsOneOf {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'],
        'field': json['field'],
    };
}

export function ChangePwFormFieldsOneOfToJSON(value?: ChangePwFormFieldsOneOf | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'error': value['error'],
        'field': value['field'],
    };
}

