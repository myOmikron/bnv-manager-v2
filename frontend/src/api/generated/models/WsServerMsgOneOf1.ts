/* tslint:disable */
/* eslint-disable */
/**
 * Frontend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DnsQueryResult } from './DnsQueryResult';
import {
    DnsQueryResultFromJSON,
    DnsQueryResultFromJSONTyped,
    DnsQueryResultToJSON,
} from './DnsQueryResult';

/**
 * DNS query update
 * @export
 * @interface WsServerMsgOneOf1
 */
export interface WsServerMsgOneOf1 {
    /**
     * 
     * @type {DnsQueryResult}
     * @memberof WsServerMsgOneOf1
     */
    result: DnsQueryResult;
    /**
     * The task uuid
     * @type {string}
     * @memberof WsServerMsgOneOf1
     */
    task: string;
    /**
     * 
     * @type {string}
     * @memberof WsServerMsgOneOf1
     */
    type: WsServerMsgOneOf1TypeEnum;
}


/**
 * @export
 */
export const WsServerMsgOneOf1TypeEnum = {
    DnsUpdate: 'DnsUpdate'
} as const;
export type WsServerMsgOneOf1TypeEnum = typeof WsServerMsgOneOf1TypeEnum[keyof typeof WsServerMsgOneOf1TypeEnum];


/**
 * Check if a given object implements the WsServerMsgOneOf1 interface.
 */
export function instanceOfWsServerMsgOneOf1(value: object): value is WsServerMsgOneOf1 {
    if (!('result' in value) || value['result'] === undefined) return false;
    if (!('task' in value) || value['task'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function WsServerMsgOneOf1FromJSON(json: any): WsServerMsgOneOf1 {
    return WsServerMsgOneOf1FromJSONTyped(json, false);
}

export function WsServerMsgOneOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): WsServerMsgOneOf1 {
    if (json == null) {
        return json;
    }
    return {
        
        'result': DnsQueryResultFromJSON(json['result']),
        'task': json['task'],
        'type': json['type'],
    };
}

export function WsServerMsgOneOf1ToJSON(value?: WsServerMsgOneOf1 | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'result': DnsQueryResultToJSON(value['result']),
        'task': value['task'],
        'type': value['type'],
    };
}

