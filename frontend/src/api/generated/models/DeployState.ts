/* tslint:disable */
/* eslint-disable */
/**
 * Frontend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { DeployStateOneOf } from './DeployStateOneOf';
import {
    instanceOfDeployStateOneOf,
    DeployStateOneOfFromJSON,
    DeployStateOneOfFromJSONTyped,
    DeployStateOneOfToJSON,
} from './DeployStateOneOf';
import type { DeployStateOneOf1 } from './DeployStateOneOf1';
import {
    instanceOfDeployStateOneOf1,
    DeployStateOneOf1FromJSON,
    DeployStateOneOf1FromJSONTyped,
    DeployStateOneOf1ToJSON,
} from './DeployStateOneOf1';
import type { DeployStateOneOf2 } from './DeployStateOneOf2';
import {
    instanceOfDeployStateOneOf2,
    DeployStateOneOf2FromJSON,
    DeployStateOneOf2FromJSONTyped,
    DeployStateOneOf2ToJSON,
} from './DeployStateOneOf2';

/**
 * @type DeployState
 * The current deploy state
 * @export
 */
export type DeployState = DeployStateOneOf | DeployStateOneOf1 | DeployStateOneOf2;

export function DeployStateFromJSON(json: any): DeployState {
    return DeployStateFromJSONTyped(json, false);
}

export function DeployStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeployState {
    if (json == null) {
        return json;
    }
    if (instanceOfDeployStateOneOf(json)) {
        return DeployStateOneOfFromJSONTyped(json, true);
    }
    if (instanceOfDeployStateOneOf1(json)) {
        return DeployStateOneOf1FromJSONTyped(json, true);
    }
    if (instanceOfDeployStateOneOf2(json)) {
        return DeployStateOneOf2FromJSONTyped(json, true);
    }
}

export function DeployStateToJSON(value?: DeployState | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfDeployStateOneOf(value)) {
        return DeployStateOneOfToJSON(value as DeployStateOneOf);
    }
    if (instanceOfDeployStateOneOf1(value)) {
        return DeployStateOneOf1ToJSON(value as DeployStateOneOf1);
    }
    if (instanceOfDeployStateOneOf2(value)) {
        return DeployStateOneOf2ToJSON(value as DeployStateOneOf2);
    }

    return {};
}

