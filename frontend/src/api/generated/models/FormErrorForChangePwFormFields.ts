/* tslint:disable */
/* eslint-disable */
/**
 * Frontend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FormFieldErrorForChangePwFormFields } from './FormFieldErrorForChangePwFormFields';
import {
    FormFieldErrorForChangePwFormFieldsFromJSON,
    FormFieldErrorForChangePwFormFieldsFromJSONTyped,
    FormFieldErrorForChangePwFormFieldsToJSON,
} from './FormFieldErrorForChangePwFormFields';

/**
 * The response that should be used for inform the user about errors in the form
 * @export
 * @interface FormErrorForChangePwFormFields
 */
export interface FormErrorForChangePwFormFields {
    /**
     * The errors that occurred
     * @type {Array<FormFieldErrorForChangePwFormFields>}
     * @memberof FormErrorForChangePwFormFields
     */
    errors: Array<FormFieldErrorForChangePwFormFields>;
}

/**
 * Check if a given object implements the FormErrorForChangePwFormFields interface.
 */
export function instanceOfFormErrorForChangePwFormFields(value: object): value is FormErrorForChangePwFormFields {
    if (!('errors' in value) || value['errors'] === undefined) return false;
    return true;
}

export function FormErrorForChangePwFormFieldsFromJSON(json: any): FormErrorForChangePwFormFields {
    return FormErrorForChangePwFormFieldsFromJSONTyped(json, false);
}

export function FormErrorForChangePwFormFieldsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormErrorForChangePwFormFields {
    if (json == null) {
        return json;
    }
    return {
        
        'errors': ((json['errors'] as Array<any>).map(FormFieldErrorForChangePwFormFieldsFromJSON)),
    };
}

export function FormErrorForChangePwFormFieldsToJSON(value?: FormErrorForChangePwFormFields | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'errors': ((value['errors'] as Array<any>).map(FormFieldErrorForChangePwFormFieldsToJSON)),
    };
}

