{
    "openapi": "3.0.0",
    "info": {
        "title": "Unnamed Galvyn API",
        "version": "v0.0.0"
    },
    "paths": {
        "/api/v1/frontend/admin/accounts/superadmins": {
            "get": {
                "operationId": "get_all_superadmins",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SimpleAccount"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/frontend/admin/clubs/{uuid}": {
            "get": {
                "operationId": "get_club",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Club"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "delete_club",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/frontend/admin/clubs": {
            "get": {
                "operationId": "get_clubs",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Club"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "create_club",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateClubRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormResult_for_ClubUuid_and_CreateClubError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/frontend/admin/clubs/{uuid}/admins": {
            "get": {
                "operationId": "get_club_admins",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "style": "simple"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "description": "Limit for pagination",
                            "type": "integer",
                            "minimum": 0,
                            "format": "uint64"
                        },
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "description": "Offset for pagination",
                            "type": "integer",
                            "minimum": 0,
                            "format": "uint64"
                        },
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "nullable": true,
                            "description": "Search for usernames",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/MaxStr_255"
                                }
                            ]
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page_for_SimpleAccount"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/frontend/admin/clubs/{uuid}/members": {
            "get": {
                "operationId": "get_club_members",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "style": "simple"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "description": "Limit for pagination",
                            "type": "integer",
                            "minimum": 0,
                            "format": "uint64"
                        },
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "description": "Offset for pagination",
                            "type": "integer",
                            "minimum": 0,
                            "format": "uint64"
                        },
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "nullable": true,
                            "description": "Search for usernames",
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/MaxStr_255"
                                }
                            ]
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Page_for_SimpleAccount"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/frontend/admin/clubs/{uuid}/members/invites": {
            "get": {
                "operationId": "get_club_member_invites",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetInvite"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/frontend/admin/clubs/{uuid}/admins/invites": {
            "get": {
                "operationId": "get_club_admin_invites",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetInvite"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/frontend/admin/clubs/{uuid}/domains": {
            "get": {
                "operationId": "get_club_domains",
                "parameters": [
                    {
                        "in": "path",
                        "name": "uuid",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "style": "simple"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Domain"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/frontend/admin/invites": {
            "post": {
                "operationId": "create_invite",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateInviteRequestAdmin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormResult_for_SingleLink_and_CreateInviteError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/frontend/admin/oidc-providers": {
            "get": {
                "operationId": "get_all_oidc_providers",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OidcProvider"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "create_oidc_provider",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOidcProvider"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OidcProviderUuid"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountUuid": {
                "description": "New-type for the account's primary key",
                "type": "string",
                "format": "uuid"
            },
            "ApiErrorResponse": {
                "description": "The response that is sent in a case of an error",
                "type": "object",
                "properties": {
                    "message": {
                        "description": "A human-readable error message.\n\nMay be used for displaying purposes",
                        "type": "string"
                    },
                    "status_code": {
                        "description": "The Status code for the error.\n\nImportant: Does not match http status codes",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ApiStatusCode"
                            }
                        ]
                    }
                },
                "required": [
                    "message",
                    "status_code"
                ]
            },
            "ApiStatusCode": {
                "description": "The Status code that are returned throughout the API",
                "type": "integer",
                "enum": [
                    1000,
                    1001,
                    1002,
                    1003,
                    2000
                ]
            },
            "Club": {
                "description": "A single club",
                "type": "object",
                "properties": {
                    "admin_count": {
                        "description": "The number of admins in the club",
                        "type": "integer",
                        "minimum": 0,
                        "format": "uint64"
                    },
                    "created_at": {
                        "description": "The point in time the club was created",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SchemaDateTime"
                            }
                        ]
                    },
                    "member_count": {
                        "description": "The number of members in the club",
                        "type": "integer",
                        "minimum": 0,
                        "format": "uint64"
                    },
                    "modified_at": {
                        "description": "The last point in time the club was modified",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SchemaDateTime"
                            }
                        ]
                    },
                    "name": {
                        "description": "Name of the club",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "uuid": {
                        "description": "Primary key of a club",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClubUuid"
                            }
                        ]
                    }
                },
                "required": [
                    "admin_count",
                    "created_at",
                    "member_count",
                    "modified_at",
                    "name",
                    "uuid"
                ]
            },
            "ClubUuid": {
                "description": "New-type for the primary key of the club",
                "type": "string",
                "format": "uuid"
            },
            "CreateClubError": {
                "description": "Error when creating a club",
                "type": "object",
                "properties": {
                    "domain_already_exists": {
                        "description": "Domain already exists",
                        "type": "boolean"
                    },
                    "name_already_exists": {
                        "description": "Whether the club name already exists",
                        "type": "boolean"
                    }
                },
                "required": [
                    "domain_already_exists",
                    "name_already_exists"
                ]
            },
            "CreateClubRequest": {
                "description": "Request to create a club",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the club",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "primary_domain": {
                        "description": "Primary domain of the club",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    }
                },
                "required": [
                    "name",
                    "primary_domain"
                ]
            },
            "CreateInviteError": {
                "description": "Errors that can occur while creating an invitation",
                "type": "object",
                "properties": {
                    "username_already_occupied": {
                        "description": "Username is already taken",
                        "type": "boolean"
                    }
                },
                "required": [
                    "username_already_occupied"
                ]
            },
            "CreateInviteRequestAdmin": {
                "description": "Request to create an invitation",
                "type": "object",
                "properties": {
                    "display_name": {
                        "description": "Display-name of the user",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "roles": {
                        "description": "Roles to assign to the user",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "username": {
                        "description": "Reserved username",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "valid_days": {
                        "description": "The point in time the invite expires",
                        "type": "integer",
                        "minimum": 1,
                        "format": "uint8"
                    }
                },
                "required": [
                    "display_name",
                    "roles",
                    "username",
                    "valid_days"
                ]
            },
            "CreateOidcProvider": {
                "description": "Request to create an oidc provider",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the oidc provider",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "redirect_uri": {
                        "description": "Redirect url of the oidc provider",
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "name",
                    "redirect_uri"
                ]
            },
            "Domain": {
                "description": "The representation of a domain",
                "type": "object",
                "properties": {
                    "domain": {
                        "description": "The domain",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "uuid": {
                        "description": "Internal identifier of the domain",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DomainUuid"
                            }
                        ]
                    }
                },
                "required": [
                    "domain",
                    "uuid"
                ]
            },
            "DomainUuid": {
                "description": "Uuid of a domain",
                "type": "string",
                "format": "uuid"
            },
            "FormResult_for_ClubUuid_and_CreateClubError": {
                "description": "A `Result` with a custom serialization",
                "oneOf": [
                    {
                        "type": "object",
                        "properties": {
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Ok"
                                ]
                            },
                            "value": {
                                "$ref": "#/components/schemas/ClubUuid"
                            }
                        },
                        "required": [
                            "result",
                            "value"
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "error": {
                                "$ref": "#/components/schemas/CreateClubError"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Err"
                                ]
                            }
                        },
                        "required": [
                            "error",
                            "result"
                        ]
                    }
                ]
            },
            "FormResult_for_SingleLink_and_CreateInviteError": {
                "description": "A `Result` with a custom serialization",
                "oneOf": [
                    {
                        "type": "object",
                        "properties": {
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Ok"
                                ]
                            },
                            "value": {
                                "$ref": "#/components/schemas/SingleLink"
                            }
                        },
                        "required": [
                            "result",
                            "value"
                        ]
                    },
                    {
                        "type": "object",
                        "properties": {
                            "error": {
                                "$ref": "#/components/schemas/CreateInviteError"
                            },
                            "result": {
                                "type": "string",
                                "enum": [
                                    "Err"
                                ]
                            }
                        },
                        "required": [
                            "error",
                            "result"
                        ]
                    }
                ]
            },
            "GetInvite": {
                "description": "API representation of an invitation",
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "The point in time the invite was created",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SchemaDateTime"
                            }
                        ]
                    },
                    "display_name": {
                        "description": "Display-name of the user",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "expires_at": {
                        "description": "The point in time the invite expires",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SchemaDateTime"
                            }
                        ]
                    },
                    "link": {
                        "description": "Public link for accessing the invite",
                        "type": "string"
                    },
                    "username": {
                        "description": "Reserved username",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "uuid": {
                        "description": "Primary key of the invite",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InviteUuid"
                            }
                        ]
                    }
                },
                "required": [
                    "created_at",
                    "display_name",
                    "expires_at",
                    "link",
                    "username",
                    "uuid"
                ]
            },
            "InviteUuid": {
                "description": "Wrapper for the primary key of the [Invite]",
                "type": "string",
                "format": "uuid"
            },
            "MaxStr_255": {
                "type": "string",
                "maxLength": 255
            },
            "MaxStr_64": {
                "type": "string",
                "maxLength": 64
            },
            "OidcProvider": {
                "description": "A single OIDC Provider",
                "type": "object",
                "properties": {
                    "client_id": {
                        "description": "client id of the provider",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OidcProviderUuid"
                            }
                        ]
                    },
                    "client_secret": {
                        "description": "Secret of the provider",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_64"
                            }
                        ]
                    },
                    "name": {
                        "description": "Human-readable name",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "redirect_uri": {
                        "description": "Redirect url associated with the provider",
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "client_id",
                    "client_secret",
                    "name",
                    "redirect_uri"
                ]
            },
            "OidcProviderUuid": {
                "description": "Client id of an oidc provider",
                "type": "string",
                "format": "uuid"
            },
            "Page_for_SimpleAccount": {
                "description": "A page of items",
                "type": "object",
                "properties": {
                    "items": {
                        "description": "The page's items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleAccount"
                        }
                    },
                    "limit": {
                        "description": "The limit this page was requested with",
                        "type": "integer",
                        "minimum": 0,
                        "format": "uint64"
                    },
                    "offset": {
                        "description": "The offset this page was requested with",
                        "type": "integer",
                        "minimum": 0,
                        "format": "uint64"
                    },
                    "total": {
                        "description": "The total number of items this page is a subset of",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "items",
                    "limit",
                    "offset",
                    "total"
                ]
            },
            "Role": {
                "description": "The available roles of the manager",
                "oneOf": [
                    {
                        "description": "The admin of a club. Can manage users and settings of its club",
                        "type": "object",
                        "properties": {
                            "club_uuid": {
                                "$ref": "#/components/schemas/ClubUuid"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "ClubAdmin"
                                ]
                            }
                        },
                        "required": [
                            "club_uuid",
                            "type"
                        ]
                    },
                    {
                        "description": "A member of a club.",
                        "type": "object",
                        "properties": {
                            "club_uuid": {
                                "$ref": "#/components/schemas/ClubUuid"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "ClubMember"
                                ]
                            }
                        },
                        "required": [
                            "club_uuid",
                            "type"
                        ]
                    },
                    {
                        "description": "The super administrator. Has rights to manager clubs.",
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "SuperAdmin"
                                ]
                            }
                        },
                        "required": [
                            "type"
                        ]
                    }
                ]
            },
            "SchemaDateTime": {
                "example": "1970-01-01T00:00:00.0Z",
                "type": "string",
                "format": "date-time"
            },
            "SimpleAccount": {
                "description": "Simple representation of an account.",
                "type": "object",
                "properties": {
                    "display_name": {
                        "description": "The account's display name.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "username": {
                        "description": "The account's username.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MaxStr_255"
                            }
                        ]
                    },
                    "uuid": {
                        "description": "The account's UUID.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountUuid"
                            }
                        ]
                    }
                },
                "required": [
                    "display_name",
                    "username",
                    "uuid"
                ]
            },
            "SingleLink": {
                "description": "A single string representing a link wrapped in a struct",
                "type": "object",
                "properties": {
                    "link": {
                        "type": "string"
                    }
                },
                "required": [
                    "link"
                ]
            }
        }
    }
}
